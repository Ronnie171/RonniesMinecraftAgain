//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Avatar"",
            ""id"": ""8fe59d0b-c57c-4ff0-9790-f0f2e2dc6b1b"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""30c92c4b-bcd4-4c57-9b0f-70c3b8a9ce68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""4248f686-a6fb-4df9-baba-a53773d44ca4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""202159c3-9d6c-49df-8f94-59fe72b790d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DestroyBlock"",
                    ""type"": ""Button"",
                    ""id"": ""62b64ed2-e4c0-4c09-b17d-f89a2383667a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BuildBlock"",
                    ""type"": ""Button"",
                    ""id"": ""d65b09bd-1040-49fd-bc23-21a25aadb3e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrapCursor"",
                    ""type"": ""Button"",
                    ""id"": ""63472b87-7339-4001-ba3a-b5b639c31d2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UntrapCursor"",
                    ""type"": ""Button"",
                    ""id"": ""ece58f37-845f-49e0-8325-775d2f5b55a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9665a5f9-d5b6-44cd-bab3-3953f99c29fe"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""43a7073b-234b-44ab-b613-4cdb38b611c1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a493313b-b9de-41e1-9acd-ea4826c6fab3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0e7f79d9-a66f-44f3-a0d0-2f8bd284cf01"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cb81ea78-a145-4587-b87a-863ff4776d84"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cce4bddf-e287-44b4-85a1-c21926814bf2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""20bfe06a-b472-4c81-9719-62eead40d75e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d01b327-b9f2-4329-af6d-6aa92398cc8b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DestroyBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dad3763-7a27-4c28-80f2-53c118744265"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuildBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6121ed1-932e-4961-a257-f00cb460492b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrapCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a652bc01-d943-4ff2-b34a-ffa7b4ff1279"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UntrapCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0bc783c-ac17-43e5-a46c-5f03dd418f20"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UntrapCursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Avatar
        m_Avatar = asset.FindActionMap("Avatar", throwIfNotFound: true);
        m_Avatar_Jump = m_Avatar.FindAction("Jump", throwIfNotFound: true);
        m_Avatar_Move = m_Avatar.FindAction("Move", throwIfNotFound: true);
        m_Avatar_Look = m_Avatar.FindAction("Look", throwIfNotFound: true);
        m_Avatar_DestroyBlock = m_Avatar.FindAction("DestroyBlock", throwIfNotFound: true);
        m_Avatar_BuildBlock = m_Avatar.FindAction("BuildBlock", throwIfNotFound: true);
        m_Avatar_TrapCursor = m_Avatar.FindAction("TrapCursor", throwIfNotFound: true);
        m_Avatar_UntrapCursor = m_Avatar.FindAction("UntrapCursor", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Avatar
    private readonly InputActionMap m_Avatar;
    private IAvatarActions m_AvatarActionsCallbackInterface;
    private readonly InputAction m_Avatar_Jump;
    private readonly InputAction m_Avatar_Move;
    private readonly InputAction m_Avatar_Look;
    private readonly InputAction m_Avatar_DestroyBlock;
    private readonly InputAction m_Avatar_BuildBlock;
    private readonly InputAction m_Avatar_TrapCursor;
    private readonly InputAction m_Avatar_UntrapCursor;
    public struct AvatarActions
    {
        private @PlayerControls m_Wrapper;
        public AvatarActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Avatar_Jump;
        public InputAction @Move => m_Wrapper.m_Avatar_Move;
        public InputAction @Look => m_Wrapper.m_Avatar_Look;
        public InputAction @DestroyBlock => m_Wrapper.m_Avatar_DestroyBlock;
        public InputAction @BuildBlock => m_Wrapper.m_Avatar_BuildBlock;
        public InputAction @TrapCursor => m_Wrapper.m_Avatar_TrapCursor;
        public InputAction @UntrapCursor => m_Wrapper.m_Avatar_UntrapCursor;
        public InputActionMap Get() { return m_Wrapper.m_Avatar; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AvatarActions set) { return set.Get(); }
        public void SetCallbacks(IAvatarActions instance)
        {
            if (m_Wrapper.m_AvatarActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnJump;
                @Move.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnLook;
                @DestroyBlock.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnDestroyBlock;
                @DestroyBlock.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnDestroyBlock;
                @DestroyBlock.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnDestroyBlock;
                @BuildBlock.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnBuildBlock;
                @BuildBlock.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnBuildBlock;
                @BuildBlock.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnBuildBlock;
                @TrapCursor.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnTrapCursor;
                @TrapCursor.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnTrapCursor;
                @TrapCursor.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnTrapCursor;
                @UntrapCursor.started -= m_Wrapper.m_AvatarActionsCallbackInterface.OnUntrapCursor;
                @UntrapCursor.performed -= m_Wrapper.m_AvatarActionsCallbackInterface.OnUntrapCursor;
                @UntrapCursor.canceled -= m_Wrapper.m_AvatarActionsCallbackInterface.OnUntrapCursor;
            }
            m_Wrapper.m_AvatarActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @DestroyBlock.started += instance.OnDestroyBlock;
                @DestroyBlock.performed += instance.OnDestroyBlock;
                @DestroyBlock.canceled += instance.OnDestroyBlock;
                @BuildBlock.started += instance.OnBuildBlock;
                @BuildBlock.performed += instance.OnBuildBlock;
                @BuildBlock.canceled += instance.OnBuildBlock;
                @TrapCursor.started += instance.OnTrapCursor;
                @TrapCursor.performed += instance.OnTrapCursor;
                @TrapCursor.canceled += instance.OnTrapCursor;
                @UntrapCursor.started += instance.OnUntrapCursor;
                @UntrapCursor.performed += instance.OnUntrapCursor;
                @UntrapCursor.canceled += instance.OnUntrapCursor;
            }
        }
    }
    public AvatarActions @Avatar => new AvatarActions(this);
    public interface IAvatarActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnDestroyBlock(InputAction.CallbackContext context);
        void OnBuildBlock(InputAction.CallbackContext context);
        void OnTrapCursor(InputAction.CallbackContext context);
        void OnUntrapCursor(InputAction.CallbackContext context);
    }
}
